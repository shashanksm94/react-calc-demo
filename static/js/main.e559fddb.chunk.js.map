{"version":3,"sources":["images/UF.png","components/header/header.js","components/sidebar/sidebar.js","components/footer/footer.js","components/pages/react.js","components/pages/about.js","components/calculator/screen/screen.js","components/calculator/key/key.js","components/calculator/calculator.js","components/pages/demo.js","components/pages/calcPage.js","components/pages/making.js","components/content/content.js","components/app/app.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","className","NavbarBrand","src","UF","alt","NavbarText","Sidebar","Nav","vertical","to","NavItem","Component","Footer","AboutReact","Container","Row","Col","AboutMe","Screen","unit","this","props","styleScreen","margin","marginBottom","padding","width","height","overflow","color","backgroundColor","textAlign","boxShadow","fontFamily","fontSize","style","tabIndex","onKeyDown","keyPressHandler","display","Key","focussed","setState","pressed","blurred","state","isNaN","value","shadow","textShadow","w","h","fSize","styleBtn","verticalAlign","borderRadius","outline","onClick","clickHandler","onFocus","onBlur","Calculator","handleKeyPress","e","keyVal","key","keys","includes","undefined","handleInput","handleClick","target","innerText","a","b","op","valOnScreen","newA","newB","newOp","newValOnScreen","toString","substring","length","calculate","Number","indexOf","result","toFixed","dimUnit","styleKeypad","launch","keyElems","map","val","slice","Demo","xs","md","lg","CalcPage","xl","sm","class","Making","Content","exact","path","component","App","fluid","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e559fddb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/UF.3dcaef5a.png\";","import \"./header.css\";\nimport React from \"react\";\nimport { Navbar, NavbarBrand, NavbarText } from \"reactstrap\";\n\nimport UF from \"../../images/UF.png\";\n\nconst Header = () => {\n  return (\n    <Navbar className=\"Navbar\">\n      <NavbarBrand className=\"NavbarBrand\">\n        <img src={UF} alt=\"UF Logo\"></img>\n      </NavbarBrand>\n      <h3>React App Demo</h3>\n      <NavbarText className=\"NavbarText\">\n        <h6>Shashank M</h6>\n      </NavbarText>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./sidebar.css\";\nimport { Nav, NavItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"Sidebar\">\n        <p className=\"heading\">React Demo</p>\n        <Nav vertical className=\"Nav\">\n          <NavLink to=\"/\" className=\"NavLink\">\n            <NavItem className=\"NavItem\">\n              <h6>React</h6>\n            </NavItem>\n          </NavLink>\n          <NavLink to=\"/calculator\" className=\"NavLink\">\n            <NavItem className=\"NavItem\">\n              <h6>Calculator</h6>\n            </NavItem>\n          </NavLink>\n          <NavLink to=\"/making\" className=\"NavLink\">\n            <NavItem className=\"NavItem\">\n              <h6>The Making</h6>\n            </NavItem>\n          </NavLink>\n          <NavLink to=\"/demo\" className=\"NavLink\">\n            <NavItem className=\"NavItem\">\n              <h6>Demo</h6>\n            </NavItem>\n          </NavLink>\n          <NavLink to=\"/about\" className=\"NavLink\">\n            <NavItem className=\"NavItem\">\n              <h6>About Me</h6>\n            </NavItem>\n          </NavLink>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import \"./footer.css\";\nimport React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <footer>&copy;ReactDemoApp by ShashankM</footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Container, Col, Row } from \"reactstrap\";\nimport \"./react.css\";\n\nconst AboutReact = () => {\n  return (\n    <div className=\"AboutReactContainer\">\n      <Container>\n        <Row>\n          <Col className=\"Col\">\n            <h1>What is ReactJS....</h1>\n            <h5>Let's get to know React according to the web</h5>\n            <p>\n              React is a JavaScript library that aims to simplify development of\n              visual interfaces. Developed at Facebook and released to the world\n              in 2013, it drives some of the most widely used code in the world,\n              powering Facebook and Instagram among many, many other software\n              companies. Its primary goal is to make it easy to reason about an\n              interface and its state in any point in time, by dividing the UI\n              into a collection of components. React is used to build\n              single-page web applications, among with many other libraries and\n              frameworks that were available before React came into life.\n            </p>\n            <p>There isn’t too much into React than these concepts:</p>\n            <ul>\n              <li>Components</li>\n              <li>JSX</li>\n              <li>State</li>\n              <li>Props</li>\n            </ul>\n            <h3>Components</h3>\n            <p>\n              A component is one isolated piece of interface. For example in a\n              typical blog homepage you might find the Sidebar component, and\n              the Blog Posts List component. They are in turn composed by\n              components themselves, so you could have a list of Blog post\n              components, each for every blog post, and each with its own\n              peculiar properties.\n            </p>\n            <h3>JSX</h3>\n            <p>\n              Besides normal HTML, CSS, and JavaScript, the bulk of your React\n              code will be written in something known as JSX. JSX is a language\n              that allows you to easily mix JavaScript and HTML-like tags to\n              define user interface (UI) elements and their functionality.\n            </p>\n            <p>\n              BUT we need a way to take our JSX and convert it into plain old\n              JavaScript that your browser can understand.\n            </p>\n            <p>\n              Fortunately, there are two solutions to this:\n              <ul>\n                <li>\n                  <b>\n                    Set up a development environment around Node and a handful\n                    of build-tools\n                  </b>\n                </li>\n                <p>\n                  In this environment, every time you perform a build, all of\n                  your JSX is automatically converted into JS and placed on disk\n                  for you to reference like any plain JavaScript file\n                </p>\n                <li>\n                  <b>\n                    Let your browser automatically convert JSX to JavaScript at\n                    runtime\n                  </b>\n                </li>\n                <p>\n                  You specify your JSX directly just like you would any old\n                  piece of JavaScript, and your browser takes care of the rest\n                </p>\n              </ul>\n            </p>\n            <h3>Props</h3>\n            <p>\n              Just like with functions, you can pass in arguments that alter\n              what your component does. There is a slight terminology update you\n              need to be on top of. What we call arguments in the function world\n              are going to be known as properties in the component world.\n            </p>\n            <h3>State</h3>\n            <p>\n              Your properties are considered immutable once they have been set.\n              For many interactive scenarios, you don't want that. You want to\n              be able to change aspects of your components as a result of some\n              user interaction (or some data getting returned from a server or a\n              billion other things!) What we need is another way to store data\n              on a component that goes beyond properties. We need a way to store\n              data that can be changed. What we need is something known as\n              state!\n            </p>\n            <blockquote>\n              <i></i>\n            </blockquote>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default AboutReact;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"./about.css\";\n\nconst AboutMe = () => {\n  return (\n    <div className=\"AboutMeContainer\">\n      <Container>\n        <Row>\n          <Col className=\"Col\">\n            <h1>In thinking....</h1>\n            <p className=\"justify\">\n              I'm Shashank Mayekar, a recent Computer Science graduate from UF.\n              Before I began my Masters here, I worked for about a year at Tata\n              Consultancy Services in India.\n            </p>\n            <p className=\"justify\">\n              The most difficult thing for me is to express. Why? I'll try to\n              explain. Here's an article I wrote when I was at London waiting\n              for my flight back to USA.\n            </p>\n            <blockquote>\n              <i>\n                No matter how fast you run, you won’t escape. No matter how calm\n                you show out, only you know what hides inside..\n              </i>\n            </blockquote>\n\n            <p className=\"justify\">\n              The want for happiness grabs you from wherever you hide. You might\n              stay away for a day, a week, a year, but then you’d be back to\n              being a human and that’s fair; It’s a trait. The ones who conquer\n              it are few. If you try to be one, you’d find yourself running away\n              and staying isolated from everyone and everything. You’d try to\n              stop feeling, and thinking about any memory you earned or any\n              emotion you learnt. But you can never wipe them.\n            </p>\n            <p className=\"justify\">\n              And today, where we never stop bothering, it’s almost not possible\n              to be a<i>bairagi</i>一free from worldly affairs. But what one can\n              possibly become, is someone who’s independent of as much as\n              possible of what goes around. Be there an argument, a fight, a\n              death, you’d still be able to contain yourself. And considering\n              your calm, you’d not happen to be involved in the first two. You’d\n              be able to choose what affects you, what makes you happy, and what\n              doesn’t. You’d know that we ourselves create the positive and\n              negative thoughts within.\n            </p>\n            <p className=\"justify\">\n              But like a stream that meanders its way to eventually meet the\n              sea, we sometimes assume the same would happen to us but it\n              doesn’t. Being okay with where you are doesn’t make it your\n              destiny. There’s this one approach of searching for contentment\n              and happiness within you; To stay aloof from what goes around. And\n              then there’s another where you do anything, say anything, and get\n              anything. This approach also involves those who argue and fight\n              for what seems righteous or those who do everything to support\n              what’s right (let’s consider the positive). But their time cannot\n              be called ‘happy’ though their victories cover it up. Both ways\n              take you to happiness somehow but neither of them is easier than\n              the other.\n            </p>\n            <p className=\"justify\">\n              Which one you choose would surely make a difference in what you\n              become and what would become of those around you. Whether you\n              become enlightened with truth or you fight for what you think is\n              true. Whether people come to you for their happiness or you\n              yourself make a subset happy. Whether you do nothing and stay calm\n              or you act to benefit a few.\n            </p>\n            <p className=\"justify\">\n              If there was a switch to turn everyone into the first kind, I’d\n              have pressed it. If there was a switch to backtrack everything\n              that’s gone wrong with mankind, I’d pressed it.\n            </p>\n            <blockquote>But it is what it is!</blockquote>\n            <p className=\"justify\">\n              There’s neither! Each and every one of us is surrounded by some or\n              all of the sins and so there can never be a single-minded world.\n              There can never be ‘no wrong’ or ‘all right’! Everything stays\n              fuzzy and we will watch it.\n            </p>\n            <blockquote>\n              What would happen eventually would be good but unfortunately a new\n              beginning is also termed as ‘good’!\n            </blockquote>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import React, { Component } from \"react\";\nimport \"./screen.css\";\n\nclass Screen extends Component {\n  render() {\n    const unit = this.props.unit;\n    let styleScreen = {\n      margin: unit,\n      marginBottom: 0,\n      padding: `0px ${unit}px ${unit}px`,\n      // padding: \"0px 4px 10px\",\n      width: 46 * unit,\n      height: 10 * unit,\n      overflow: \"hidden\",\n      color: \"#555555\",\n      backgroundColor: \"#E9EDED\",\n      textAlign: \"right\",\n      boxShadow: `0px 0px ${unit}px black inset`,\n      fontFamily: \"monospace\",\n      fontSize: `${0.6 * unit}em`,\n      // outline: `${0.2 * unit} px solid white `,\n    };\n\n    return (\n      <div\n        style={styleScreen}\n        className=\"animateScreen\"\n        tabIndex=\"-1\"\n        onKeyDown={this.props.keyPressHandler}\n      >\n        {this.props.display}\n      </div>\n    );\n  }\n}\n\nexport default Screen;\n","import React, { Component } from \"react\";\nimport \"./key.css\";\n\nclass Key extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n    };\n  }\n\n  render() {\n    const unit = this.props.unit;\n\n    let color = \"rgb(225, 225, 225)\";\n    if (isNaN(this.props.value)) color = \"rgb(223, 119, 0)\";\n\n    let shadow = `0px ${0.2 * unit}px ${0.5 * unit}px 0px black`;\n    let textShadow = \"0px 0px \";\n    let bTop = `${0.1 * unit}px inset rgb(220,220,220)`;\n    if (this.state.pressed) {\n      shadow = `0px 0px ${0.1 * unit}px`;\n      color = \"white\";\n      textShadow += `${0.4 * unit}px white`;\n      bTop = 0;\n      //color = color === \"orange\" ? \"yellow\" : \"white\";\n    }\n\n    let w = 10 * unit, //50,\n      h = 10 * unit, //50,\n      fSize = `${0.5 * unit}em`;\n    // if(this.props.orientation == \"V\")\n    //     h = 2 * h + 16;\n    if (this.props.value === \"AC\" || this.props.value === \"=\") {\n      w = 2 * (w + 1 * unit);\n      //fSize = \"2.5em\";\n    }\n\n    let styleBtn = {\n      margin: unit,\n      padding: unit,\n      width: w,\n      height: h,\n      display: \"inline-block\",\n      textAlign: \"center\",\n      verticalAlign: \"center\",\n      color: color,\n      fontFamily: \"monospace\",\n      fontSize: fSize,\n      backgroundColor: \"black\",\n      borderRadius: unit,\n      outline: \"none\",\n      // borderTop: bTop,\n      boxShadow: shadow,\n      textShadow: textShadow,\n    };\n    return (\n      <div\n        style={styleBtn}\n        className=\"animateKey\"\n        onClick={this.props.clickHandler}\n        onFocus={this.focussed}\n        onBlur={this.blurred}\n        tabIndex=\"-1\"\n      >\n        {this.props.value}\n      </div>\n    );\n  }\n\n  focussed = () => {\n    this.setState({ pressed: true });\n  };\n\n  blurred = () => {\n    this.setState({ pressed: false });\n  };\n}\n\nexport default Key;\n","import React, { Component } from \"react\";\nimport Screen from \"./screen/screen\";\nimport Key from \"./key/key\";\nimport \"./calculator.css\";\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      a: undefined,\n      b: undefined,\n      op: undefined,\n      valOnScreen: 0,\n    };\n  }\n\n  // whatToChange = (e) => {\n  //   console.log(e.target);\n  // };\n\n  handleKeyPress = (e) => {\n    let keyVal;\n    switch (e.key) {\n      case \"Backspace\":\n        keyVal = \"B\";\n        break;\n      case \"Enter\":\n        keyVal = \"=\";\n        break;\n      case \"Escape\":\n        keyVal = \"AC\";\n        break;\n      case \"*\":\n        keyVal = \"x\";\n        break;\n      default:\n        if (this.keys.includes(e.key)) keyVal = e.key;\n    }\n    if (keyVal !== undefined) this.handleInput(keyVal);\n  };\n\n  handleClick = (e) => {\n    this.handleInput(e.target.innerText);\n  };\n\n  handleInput = (keyVal) => {\n    let { a, b, op, valOnScreen } = this.state;\n    let newA = a,\n      newB = b,\n      newOp = op,\n      newValOnScreen = valOnScreen;\n\n    switch (keyVal) {\n      case \"B\":\n        newValOnScreen = valOnScreen\n          .toString()\n          .substring(0, valOnScreen.toString().length - 1);\n        if (a !== undefined && op === undefined) newA = newValOnScreen;\n        else if (op !== undefined && b !== undefined) newB = newValOnScreen;\n        if (newValOnScreen.length === 0) {\n          if (op === undefined) {\n            newA = undefined;\n            newB = undefined;\n          } else {\n            newB = undefined;\n          }\n          newValOnScreen = 0;\n        }\n        break;\n      case \"/\":\n      case \"x\":\n      case \"+\":\n      case \"-\":\n        if (a === undefined && op === undefined && keyVal === \"-\") {\n          newValOnScreen = keyVal;\n        } else newOp = keyVal;\n        if (op === \"=\") newA = valOnScreen;\n        newB = undefined;\n        break;\n      case \"AC\":\n        newA = undefined;\n        newB = undefined;\n        newOp = undefined;\n        newValOnScreen = 0;\n        break;\n      case \"=\":\n        if (op !== undefined && b !== undefined) {\n          newValOnScreen = this.calculate(Number(a), Number(b), op);\n          newA = undefined;\n          newB = undefined;\n          newOp = keyVal;\n        }\n        break;\n      default:\n        if (valOnScreen.toString().length === 10 && op === undefined) break;\n        if (keyVal === \".\" && valOnScreen.toString().indexOf(\".\") !== -1) break;\n        if (\n          valOnScreen == 0 ||\n          (op !== undefined && b === undefined && op !== \"=\")\n        )\n          newValOnScreen = keyVal;\n        else if (op === \"=\") {\n          newA = keyVal;\n          newOp = undefined;\n          newValOnScreen = keyVal;\n        } else newValOnScreen = valOnScreen + keyVal;\n\n        // console.log(newValOnScreen);\n        if (op === undefined) {\n          newA = newValOnScreen;\n          newB = undefined;\n        } else if (op !== \"=\") newB = newValOnScreen;\n    }\n\n    this.setState({\n      a: newA,\n      b: newB,\n      op: newOp,\n      valOnScreen: newValOnScreen,\n    });\n  };\n\n  calculate = (a, b, op) => {\n    let result;\n    switch (op) {\n      case \"+\":\n        result = a + b;\n        break;\n      case \"-\":\n        result = a - b;\n        break;\n      case \"/\":\n        result = a / b;\n        break;\n      case \"x\":\n        result = a * b;\n        break;\n      default:\n        result = 0;\n    }\n    if (result % 1 !== 0) result = result.toFixed(4);\n    return result;\n  };\n\n  keys = [\n    \"7\",\n    \"8\",\n    \"9\",\n    \"B\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"/\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"x\",\n    \"0\",\n    \".\",\n    \"-\",\n    \"+\",\n    \"AC\",\n    \"=\",\n  ];\n\n  render() {\n    const unit = this.props.dimUnit;\n    const launch = this.props.launch;\n    const styleKeypad = {\n      margin: 0,\n      padding: unit,\n      width: 50 * unit,\n      height: 74 * unit,\n      // border: \"2px solid grey outset\",\n      borderRadius: 0.5 * unit,\n      backgroundColor: \"#BBBBBB\",\n      boxShadow: `0px ${0.75 * unit}px ${1.5 * unit}px 0px black`,\n    };\n\n    const keyElems = this.keys.map((val) => (\n      <Key\n        key={val}\n        value={val}\n        clickHandler={this.handleClick}\n        unit={unit}\n        //changeChild={this.whatToChange}\n      />\n    ));\n\n    return (\n      <div style={styleKeypad} className=\"animateCalc\">\n        <Screen\n          display={this.state.valOnScreen}\n          keyPressHandler={this.handleKeyPress}\n          unit={unit}\n        />\n        {keyElems.slice(0, 4)}\n        <br />\n        {keyElems.slice(4, 8)}\n        <br />\n        {keyElems.slice(8, 12)}\n        <br />\n        {keyElems.slice(12, 16)}\n        <br />\n        {keyElems.slice(16, 18)}\n      </div>\n    );\n  }\n}\nexport default Calculator;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"./demo.css\";\nimport Calculator from \"../calculator/calculator\";\n\nconst Demo = () => {\n  return (\n    <div className=\"DemoContainer\">\n      <Container>\n        <Row>\n          <Col xs=\"1\" md=\"2\" lg=\"4\"></Col>\n          <Col xs=\"10\" md=\"8\" lg=\"4\" className=\"Col\">\n            <Calculator dimUnit={6} launch={\"demo\"}></Calculator>\n          </Col>\n          <Col xs=\"1\" md=\"2\" lg=\"4\"></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Demo;\n","import React from \"react\";\nimport Calculator from \"../calculator/calculator\";\nimport Screen from \"../calculator/screen/screen\";\nimport Key from \"../calculator/key/key\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"./calcPage.css\";\n\nconst CalcPage = () => {\n  return (\n    <div className=\"CalcPageContainer\">\n      <Container>\n        <Row>\n          <Col xl=\"4\" lg=\"6\" md=\"12\" sm=\"12\" className=\"Col\">\n            <h1>Calculator</h1>\n            <p>Let's get to know your new calculator app created with React</p>\n            <h4>What it's got</h4>\n            <ul className=\"ulCalcPage\">\n              <li>\n                <b>Simple? Yes! Beautiful? Yes!</b>\n              </li>\n              <p>\n                We made it simple for those who get overwhelmed with the many\n                functions of a scientific calculator\n              </p>\n              <li>\n                <b>Supports both click & key events</b>\n              </li>\n              <p>\n                You read it right! All you need to do is let the screen know\n                before giving a key input\n              </p>\n              <li>\n                <b>We made it look real!</b>\n              </li>\n              <p>\n                Do not mistaken this to be a photograph. Haha. We've designed it\n                to look and feel real\n              </p>\n              <li>\n                <b>Backspace key</b>\n              </li>\n              <p>\n                We included a <b>B</b>ackspace key for you\n              </p>\n            </ul>\n          </Col>\n          <Col xl=\"4\" lg=\"6\" md=\"12\" sm=\"12\" className=\"Col\">\n            <Calculator dimUnit={5.5} launch={\"justShow\"} />\n          </Col>\n          <Col xl=\"4\" lg=\"12\" md=\"12\" sm=\"12\" className=\"Col\">\n            <h2>Components</h2>\n            <p>Let's see what React components we used</p>\n            <ul class=\"ulCalcPage\">\n              <li>\n                <b>Screen</b>\n              </li>\n              <Screen display={\"0\"} unit={6.5} />\n              <p>\n                No we didn't write the HTML and CSS to show this screen up here.\n                Well, that's what components are for! Moreover, we have designed\n                our components to scale as much as we want them to! See the\n                benefit?\n              </p>\n\n              <li>\n                <b>Key</b>\n              </li>\n              <Key value={\"B\"} unit={7.5} />\n              <Key value={\"9\"} unit={7.5} />\n              <Key value={\".\"} unit={7.5} />\n              <p>Yes it actually is! Click on it!</p>\n              <li>\n                <b>Calculator</b>\n              </li>\n              <p>\n                Wait! Did we miss the calculator? Absolutely not! Calculator =\n                Screen + Keys\n              </p>\n              <blockquote>We call it Composition</blockquote>\n            </ul>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default CalcPage;\n","import React from \"react\";\nimport Screen from \"../calculator/screen/screen\";\nimport Key from \"../calculator/key/key\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"./making.css\";\n\nconst Making = () => {\n  return (\n    <div className=\"MakingContainer\">\n      <Container>\n        <Row>\n          <Col className=\"Col\">\n            <h1>The Making</h1>\n            <p>\n              <b>Now</b>, let's look at the making of our calculator. If you\n              didn't already read about the react components we created, don't\n              worry. We will cover it here in an easy-to-understand way.\n            </p>\n\n            <h4>Components</h4>\n            <ul class=\"ulCalcPage\">\n              <li>\n                <b>Screen</b>\n              </li>\n              <Screen display={\"0\"} unit={6.5} />\n              <li>\n                <b>Key</b>\n              </li>\n              <Key value={\"B\"} unit={7.5} />\n              <Key value={\"9\"} unit={7.5} />\n              <Key value={\".\"} unit={7.5} />\n            </ul>\n            <p>\n              Let's assume the calculator was developed using plain\n              HTML-CSS-JavaScript. If you had to use it once and at a single\n              place, you would be all good. But that's hardly the case nowadays\n              when development speed matters and you usually see yourself\n              writing repetitive code. If you had to display the screen or the\n              keys at more than one place on your webpage, you would have to\n              write the code again and again. Can't we avoid this repetition?\n              Can't we have an <b>item</b> that can be <b>resuse</b>d?\n            </p>\n            <blockquote>\n              Yes we can! That's where React components come in!{\" \"}\n            </blockquote>\n            <p>\n              We didn't have to write the HTML and CSS to show these\n              (independent) <b>screen</b> and <b>key</b> components here. It was\n              a single line of code to reuse them from our calculator app.\n            </p>\n\n            <h4>State and Prop</h4>\n            <p>\n              Moreover, React gives us some things called <b>state</b> and{\" \"}\n              <b>prop</b>. A state is specific to a component and can be\n              modified from within that component, while props can be sent by a\n              parent component to <b>its</b> child component(s). A prop can be\n              used to set a child element's state. A state is used when we want\n              to <b>preserve</b> some data related to a component. We made use\n              of both.\n            </p>\n            <p>\n              Want to see an example? You already know we reused our screen and\n              key components but they aren't the same size, right? Why? We\n              scaled them by passing a <b>prop</b> to define a unit of dimension\n              (that's the way we referred to physical pixed units while\n              designing the Calculator, so it's totally okay to not get it).\n            </p>\n\n            <p>This is how we resused the components.</p>\n            <b>\n              <pre>\n                &lt;Screen display={\"{\"}\"0\"{\"}\"} unit={\"{\"}6.5{\"}\"}/&gt;\n              </pre>\n              <pre>\n                &lt;Key value={\"{\"}\"B\"{\"}\"} unit={\"{\"}7.5{\"}\"} /&gt;{\" \"}\n              </pre>\n            </b>\n            <p>\n              So HTML does not have a <b>Screen</b> tag or a <b>Key</b> tag.\n              This XML-like syntax is JSX, i.e. JavaScript XML. It's supposed to\n              work with React and is very easy to understand. In fact, JSX makes\n              learning React easier. React Components can be used as tags just\n              like we did above. For us, the parent component that creates the\n              Screen and Key components is the Calculator component. We pass\n              these props (display, value, and unit) from our Calculator\n              component while creating these child components.\n            </p>\n            <p>\n              So the <b>Calculator</b> is said to be <b>composed</b> of the{\" \"}\n              <b>Screen</b> and the <b>Key</b>s.\n            </p>\n            <p>\n              Wait! Are you curious to know about the <b>state</b>? Okay, I get\n              it. See. We have these three components for the calculator app and\n              each component has some data that is very-own to that component.\n              For the screen component, there's nothing that it needs to{\" \"}\n              <b>preserve</b> to work. It does need to show a value (if you\n              related this to the <b>display</b> prop we showed above, you're\n              smart), but that value does not have a history in our app\n              (Sshhhhh! We would have needed the Screen's state if we had to\n              show the calculation history like Google calculator does). The Key\n              component was not required to preserve any data. but we decided to\n              help it remember if it was pressed. So it has a state that has a\n              boolean value for <b>pressed</b>. Coming to the calculator\n              component, its state comprises of the two operands, the operator,\n              and the value to be shown on the screen. But we mentioned above\n              that the Screen component didn't see it as something to be\n              preserved. <b>YES</b>! But the calculator component needs to\n              preserve it. When you click on a key, you interact with the Key or\n              the Screen component, and they both send the input key value to\n              the Calculator component (via callback event handlers, but we\n              won't cover it here). The calculator component then calculates\n              something (if needed) and sends to the Screen component a value\n              that it needs to display (that's what we did through the{\" \"}\n              <b>display</b> prop of the Screen). The calculator needs to\n              preserve the state (operator, operands, and display value),\n              because your next input needs all of these. For instance, if you\n              enter '+', we need to know what you did before that (what the\n              first operand was).\n            </p>\n            <blockquote>\"Hmmmmm.. we got it! Let's go ahead!\"</blockquote>\n            <h4>User Interface</h4>\n            <p>\n              Now let's have a look at the aesthetic part. Wait! Try opening\n              this page on some other device having dimensions different from\n              your current device (or change your browser window size if you\n              can).\n            </p>\n            <p>..........</p>\n            <p>\n              Did you notice that this page and all its different sections\n              (header, navigation menu, and content) fit properly?\n            </p>\n            <p>\n              Now that's because the page is <b>Responsive</b>. It is easy to\n              make your web page responsive using plain CSS. Essentially all you\n              do is specify different CSS property values for a particular\n              element based on the current screen (view-port) dimensions. It's\n              really a task with plain CSS and that's why you have libraries\n              like Bootstrap. We made significant use of Bootstrap for the UI\n              elements you see here. It makes things easier, but you still need\n              to know what to use where and how.\n            </p>\n            <p>\n              Let's look at one of Bootstrap's important elements. It's the{\" \"}\n              <b>Bootstrap grid system</b> that helps with your page layout.\n              Bootstrap grid is a grid with any number of rows and 12 columns.\n              Grids can be nested too, i.e. one column can have a row (which\n              then hosts 12 columns). Your webpage can be laid out using this\n              grid system easily.\n            </p>\n            <p>\n              We didn't mention something. Although our calculator app is made\n              of just three components, our entire web app includes components\n              like the Header, Footer, Sidebar, and Content (and a few more that\n              we'll mention later).\n            </p>\n            {/* <Row className=\"gridRow\">\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n              <Col className=\"gridCol\"></Col>\n            </Row> */}\n\n            <h4>React DOM</h4>\n            <p>\n              Okay.. So that's all fine. Now why is this a{\" \"}\n              <b>Single Page App (SPA)</b> and what does that mean?\n            </p>\n            <blockquote>\n              Let me ask you, how different are a mobile app and a traditional\n              website to you?\n            </blockquote>\n            <p>\n              A website genetally needs to load after every user action whereas\n              an app does not. That's why we build a Single Page Application. It\n              is a website, but does not completely reload on every user action.\n              When you navigated to the <b>The Making</b> section, did you see\n              the page reload? No. Because this is a Single Page App. A SPA\n              loads only the parts of a webpage that have changed. How does it\n              know that? That's the working of the <b>React Virtual DOM</b>.\n              Wait! Now what is a DOM? DOM is Document Object Model. JavaScript\n              deals directly with the DOM where you can edit elements using\n              their ID or class. Just think of the DOM as all that there is on\n              the web page. React has its own virtual DOM. It does not alter the\n              browser DOM directly. Assume for a particular instant that the\n              React Virtual DOM is the same as the browser's DOM. And you click\n              on a button. Traditional JavaScript can handle such events\n              directly and load the relevant DOM elements. But React does not.\n              React handles all events generated through the React's components.\n              Then based on your event logic, it alters its virtual DOM (, only\n              the part that needs to change). It then compares the virtual DOM\n              to the browser DOM, identifies what part of the browser DOM needs\n              to be changed, and makes the change. This might seem too long, but\n              it's not. It's fast and you get an App-like feeling on your\n              website (and that feels cool).\n            </p>\n            <h4>React Router</h4>\n            <p>\n              Now being a SPA, this web page also needs to handle the browser's\n              back button and bookmarks that you can make use of with a\n              traditional website. If you don't reload the browser, how would\n              the address in the link change? That's what the{\" \"}\n              <b>React Router</b> is for. All it needs to know is{\" \"}\n              <i>what your linked documents are</i>, and{\" \"}\n              <i>where you want to load them</i>. Usually, both these are React\n              components. So in our web app, we have the Sidebar component (that\n              hosts different links) and a Content Component (the part you see\n              changing each time you click on a different link). We just tell\n              the React Router about them and it handles it all! Doesn't that\n              look simple?\n            </p>\n            <p>\n              It is! But all it means is, each of our links should actually be a\n              page created as a React Component. That's why we have more\n              components like <b>AboutReact</b>, <b>CalculatorPage</b>,{\" \"}\n              <b>Making</b> (yes this page itself is a component as well),{\" \"}\n              <b>Demo</b>, <b>AboutMe</b>, and above all, the <b>App</b>{\" \"}\n              component that hosts everything. But it's not that difficult to\n              create components if they are static. What?? See. If you don't\n              need all the features and complexities that a React Component\n              (class) give yous, you can make a React component as a function\n              instead of a class. That component would then be called a{\" \"}\n              <b>Static Functional Component</b> and it would not have a state\n              (it can still receive props).\n            </p>\n            <blockquote>\n              All you need to know is.. it's not difficult!\n            </blockquote>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Making;\n","import \"./content.css\";\nimport React from \"react\";\nimport AboutReact from \"../pages/react\";\nimport AboutMe from \"../pages/about\";\nimport Demo from \"../pages/demo\";\nimport CalcPage from \"../pages/calcPage\";\nimport Making from \"../pages/making\";\nimport { Route } from \"react-router-dom\";\n\nconst Content = () => {\n  return (\n    <div className=\"ContentContainer\">\n      <Route exact path=\"/\" component={AboutReact}></Route>\n      <Route path=\"/demo\" component={Demo}></Route>\n      <Route path=\"/making\" component={Making}></Route>\n      <Route path=\"/about\" component={AboutMe}></Route>\n      <Route path=\"/calculator\" component={CalcPage}></Route>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport \"./app.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"../header/header\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport Footer from \"../footer/footer\";\nimport Content from \"../content/content\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    // <div className=\"container\">\n    <Container fluid className=\"Container\">\n      <Row>\n        <Col className=\"ColHeader\">\n          <Header />\n        </Col>\n      </Row>\n      <HashRouter>\n        <Row className=\"RowSidebar\">\n          <Col sm=\"3\" lg=\"2\" className=\"ColSidebar\">\n            <Sidebar />\n          </Col>\n          <Col className=\"ColContent\">\n            <Content />\n          </Col>\n        </Row>\n      </HashRouter>\n\n      <Row>\n        <Col className=\"ColFooter\">\n          <Footer />\n        </Col>\n      </Row>\n    </Container>\n    // </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./components/app/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}